<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<!-- 
Written by G.Napolitano (www.dbfree.org)
Florence (ITALY) - MArch 2011
 //--->
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta http-equiv="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="CACHE-CONTROL" CONTENT="NO-CACHE">
<META HTTP-EQUIV="CACHE-CONTROL" CONTENT="NO-STORE">
<META HTTP-EQUIV="EXPIRES" CONTENT="0">
<META NAME="GOOGLEBOT" CONTENT="NOARCHIVE"> 
<link rel="stylesheet" type="text/css" href="/screen.css">
<link rel="shortcut icon" href="/favicon.ico">
<script language="JavaScript" type="text/javascript" src="/js/dbfree50.js"></script>
<title>Browser Detector for MaxScript</title>

<script language="javascript">
var cTxt="";
cTxt+= "[NavCodeName=" + navigator.appCodeName + "]";
cTxt+= "[NavName=" + navigator.appName + "]";
cTxt+= "[NavVersion=" + navigator.appVersion + "]";
cTxt+= "[NavCookies=" + navigator.cookieEnabled + "]";
cTxt+= "[NavPlatform=" + navigator.platform + "]";
cTxt+= "[NavUserAgent= " + navigator.userAgent + "]";
cTxt+= "[NavScreenSize= " + screen.availHeight + "x" + screen.availWidth + "]";
</script>
</head>
<%
******************** DBFree 2.1 MINI-HEADER **********
zcRoot :=  strTran(getenv("DOCUMENT_ROOT"),"/","\")
if "IIS" $ getenv("SERVER_SOFTWARE")
   p1 := strTran(getenv("PATH_TRANSLATED"),"/","\")
   p2 := strTran(getenv("SCRIPT_NAME"),"/","\")
   zcRoot := strTran(p1,p2,"")
endif
zcLib := strTran(zcRoot,"/","\")+"\lib\free2.max"
set maxlib to &zcLib
**********
//-- 2- ESTABLISHING A DEFAULT FILENAME FOR SESSION
xDir  := MspConfigVar("DATADIR")+"\vars"
if not file(xDir)
   md(xDir)
endif
xSession  := "NAV-" + strTran(getenv("REMOTE_ADDR"),".","-") + "_" + dtoc(date())
xSessFile := xDir + "\" + xSession +".mem"

*************
cAction := upper(alltrim(MSPFieldValue("VAR_ACTION")))
cOption := upper(alltrim(MSPFieldValue("VAR_OPTION")))
cSelf   := pageName()
nnn := max(MSPFieldCount(),1)
declare aVars[ nnn,2 ]
for iii = 1 to len(aVars)
  aVars[iii,1] := MSPFieldName(iii)
  aVars[iii,2] := MSPFieldValue(iii)
  *-- uncomment the line below for debugging
  *? MSPFieldName(iii) + "=" + MSPFieldValue(iii)
next
************************************************

do case
**************************
case empty(cAction)
**************************
%>
<form name="form1" action="<%=cSelf%>" method="post">
<textarea name="ef_txt" cols="80" rows="10"></textarea>
<input type="hidden" name="VAR_ACTION" value="GO">
<hr>
<input type="submit" name="PB_OK" value="OK">
</form>
<script language="javascript">
document.form1.ef_txt.value=cTxt;
document.form1.submit();
</script>
<%
*************************
case cAction="GO"
*************************
cTxt := MSPFieldValue("EF_TXT")
nOut := 0
declare aRec[1,3]

if not empty(cTxt)
   *-- searching for variable names and values pairs
   *   and load them into aRec array as pairs of elements
   nOut := parseStr(cTxt)
endif
   
if nOut > 0
   *-- if something extracted...
   for iii = 1 to nOut
      *--- building a string to name a variable
      xxx := "c" + aRec[iii,1]
      *--- declaring the variable and intializing its value
      &xxx := aRec[iii,2]
      *--- printing out (only for demonstration)
      ? xxx | "=" | &xxx
   next
   *-- now saving to a session (memory) file
   save all like cNav* to (xSessFile)
endif

*************************
endcase
*************************
%>
<hr>
<a href="index.msp">Index page</a>
</body>
</html>

<%
*-----------------------------------------------
function parseStr(cStr)
*-----------------------------------------------
nOut := 0
declare aRec[1,3]

cOpenTag  := "["
cCloseTag := "]"
cTokenTag := "="
nnn    := 1
nCount :=0
*
do while nnn < 400
   // cerchiamo i tag di apertura e chiusura nella stringa
   nPos1  := at(cOpenTag  ,cStr)
   nPos2  := at(cCloseTag ,cStr)
   nSize  := nPos2-nPos1+1
   nLen   := len(cStr)-nPos1
   
   // carichiamo la porzione di testo compresa fra i tag
   mVal := substr(cStr,nPos1+1,nSize-2)
   *
   // accorciamo la stringa eliminando la parte già esaminata
   cStr := substr(cStr,nPos2+1)
   *
   // cerchiamo dentro alla porzione il token 
   cToken := wordLeft(mVal,"=")
   cCargo := wordRight(mVal,"=")
   *
   aRedim(aRec,nnn)
   aRec[nnn,1] := strTran(cToken,"=","")
   aRec[nnn,2] := strTran(cCargo,"=","")
   aRec[nnn,3] := mVal
   *
   if at(cOpenTag ,cStr)=0
      exit
   endif
   nnn++
enddo
return nnn

%>