<html>
<%
xAppId := "myDBMAX"
lDebug :=.f.
******************************************************** HEADER-2-3-1
//-- AUTODETECT LIBRARY 
xRoot := strTran(getenv("DOCUMENT_ROOT"),"/","\")
if "IIS" $ getenv("SERVER_SOFTWARE")
   p1 := strTran(getenv("PATH_TRANSLATED"),"/","\")
   p2 := strTran(getenv("SCRIPT_NAME"),"/","\")
   xRoot := strTran(p1,p2,"")
endif
xcLib := strTran(xRoot,"/","\")+"\lib\dbmax25.max"
set maxlib to &xcLib
freeslot()

//-- WEBVARS STACK
nnn := max(MSPFieldCount(),1)
declare aVars[ nnn,2 ]
for iii = 1 to len(aVars)
   aVars[iii,1] := MSPFieldName(iii)
   aVars[iii,2] := MSPFieldValue(iii)
   if lDebug
      ? MSPFieldName(iii) +"="+ MSPFieldValue(iii)
   endif
next

//-- LOAD APP GLOBALS
xGlobals := webRoot() + "\globals.mem"
if file(xGlobals)
   restore from (xGlobals) additive
endif

//-- LOAD SESSION VARS
cSeed := MSPFieldValue("XY")
xMemFile := getMemFile(cSeed)
if file(xMemFile)
   restore from (xMemFile) additive
endif

//-- DATABASE TYPE
cDbType := MSPFieldValue("VAR_DBTYPE")
if not empty(cDbType)
   if upper(cDbType) $ "CLIPPER FOXPRO DBASE"
      set dbtype to (cDbType)
   endif
endif

CR_LF := chr(13)+chr(10)
******************************************************** END HEADER
cSelf := pagename()
cAction := upper(MSPFieldValue("VAR_ACTION"))
cOption := upper(MSPFieldValue("VAR_OPTION"))
cMsg    := MspFieldValue("VAR_MSG")


set century on
set decimals to 0
set date to british
set hour to 24

******************************************************** SECTION A
//-- A1 - STANDARD DATABASE HANDLING WEBVARS
//
cDir   := MSPFieldValue("VAR_DIR")
cTable := MSPFieldValue("VAR_TABLE")
cIndex := MSPFieldValue("VAR_INDEX")

//-- A2 - EXTENDED SET DATABASE HANDLING WEBVARS
//
cView   := MSPFieldValue("VAR_VIEW")
nRec    := val(MSPFieldValue("VAR_REC"))
cFilter := MSPFieldValue("VAR_FILTER")
cKeyFld := MSPFieldValue("VAR_KEYFLD")
cKeyCond:= MSPFieldValue("VAR_KEYCOND")
cKeyVal := MSPFieldValue("VAR_KEYVAL")

//-- A3 - AJAX STANDARD WEBVARS
//        Attention: needs ajax javascript file (jmax.js)
//
nFld := val(MSPFieldValue("V_FLD")) //-- Field to update
nAjRec := val(MSPFieldValue("V_REC")) //-- record to move to
cAjaxVar := MSPFieldValue("AJX") //-- value to write
lAjaxRun := iif(empty(cAjaxVar),.f.,.t.)

//-- EMBEDDED AJAX-V3 ACTUATOR (FOR IN-PLACE EDITING)
//
cAjxFile    := MSPFieldValue("VAR_TABLE")
cValCBFedit  := iif(empty(MSPFieldValue("CBF_EDIT")),"","checked")
cIsReadOnly := iif(empty(cValCBFedit),"readonly","")
if lAjaxRun 
   use (cAjxFile)
   if not used()
      ? "ERROR: VAR_TABLE=[" + cAjxFile + "]"
      return
   endif
   cFFld := fieldname(nFld)
   cVVal := fieldfit(cFFld,cAjaxVar)
   go nAjRec
   if rlock(2)
      repl &cFFld with cVVal
      unlock
   endif
   return
endif



******************************************************** END SECTION
%>
<%=modInfo()%>
<!-- HTML HEADER //-->
<%=include("/parts/html/header.htm")%>
<body>
<div class="container">
<!-- ---------------------------------------------------------- * ----------------------------------------//--><body>
<table border="0" width="100%" id="table1" cellspacing="0" cellpadding="3">
	<tr>
		<td>
      <font size="3"><b>Code for generating table<font color="#0000FF"> <%=filebone(cTable)%></font></b></font><font color="#0000FF"> </font>
		</td>
	</tr>
</table>
<%
if file(cTable)
   use (cTable) noupdate
   if not used()
      ? "ERROR: seems the table " + cDb + " can not be opened" html
   endif

   //-- how many fields has this table? Just find it out.
   nFields := fcount()
   if nFields = 0
      ? "ERROR: field count returns zero"
      return
   else
     *? "DEBUG: OK! processing " + str(nFields) + " fields"
   endif
   %>
   <hr><font color="#008000">Code for generating the table (for use with DBFree header 3)</font><hr>

<!-- ===============================================================//-->
<!-- =====================     GENERATOR     =======================//-->
<!-- ====================   START COPY HERE   ======================//-->
<!-- ===============================================================//-->
<code>
<%
$extended
store "" to aField, aType, aSize, aDec
nFields = afields( aField, aType, aSize, aDec )
if nFields = 0
   ? "ERROR: no fields to process!" html
   return
endif
? '<' + '%'
? '//-- DATABASE SECTION'
? '//'
? 'cDir := setDb(xAppId)" //-' + filebone(cDir)
? 'cDbPath := cDir  //-- for compatibility with V1.9-V2.1'
?
? '//-- TABLE(S) TO USE'
? '//'
? "cTable  := cDir + " + '"' + filename(cTable)+ '"'
? 'cIndex  := cDir + "' + filename(wordLeft(cTable,".DBF"))+".MTX" + '"'
? "if not file(cTable)"
//--- print code for fieldnames array declaration
cLine := 'ainit( "aField",'
for iii = 1 to len(aField)
  cLine += '"' + aField[iii] + '"' + ","
next
if right(cLine,1)=","
   cLine := substr(cLine,1,len(cLine)-1)
endif
cLine += ")"
? "   " + cLine

//--- print code for fieldtype array declaration
cLine := 'ainit( "aType",'
for iii = 1 to len(aType)
  cLine += '"' + aType[iii] + '"' + ","
next
if right(cLine,1)=","
   cLine := substr(cLine,1,len(cLine)-1)
endif
cLine += ")"
? "   " + cLine

//--- print code for fieldsize array declaration
cLine := 'ainit( "aSize",'
for iii = 1 to len(aSize)
  cLine += ltrim(str(aSize[iii])) + ","
next
if right(cLine,1)=","
   cLine := substr(cLine,1,len(cLine)-1)
endif
cLine += ")"
? "   " + cLine

//--- print code for decimals array declaration
cLine := 'ainit( "aDec",'
for iii = 1 to len(aDec)
  cLine += ltrim(str(aDec[iii])) + ","
next
if right(cLine,1)=","
   cLine := substr(cLine,1,len(cLine)-1)
endif
cLine += ")"
? "   " + cLine
?? '   create (cTable) from aField, aType, aSize, aDec'
?
?  'endif'
?
?  'use (cTable) in 0 alias MASTER index (cIndex) key ' + aField[1]
?  '%' + '>'
?
?  '<' + '%'
?  '//--OPTIONAL - FOR RECREATING INDEXES'
?
?  '//-- recreating standard DBFree MTX indexes'
?  'if not file(cIndex)'
?  '   use (cTable) in 0 alias TEMP index (cIndex) key ' + aField[1]
? "endif"
?
?  '//--OPTIONAL - FOR DBMAX INDEXES'
?
? '//-- DBMAX multiple indexes (change extension to MDX!)'
? 'cMindex := trimRight(cIndex,4) + ".mdx"'
? 'if not file(cMindex )'
? '   use (cTable) excl'
? '   if used()'
? '      index on ' + aField[1]+ ' tag ' + aField[1]
? '      ? "Rebuilt index " + cMindex '
? '   else'
? '     ? "ERROR could not open exclusive, Index " + cMindex + " not created" html'
? '   endif'
? 'endif'
? "use"
? '%' + '>'
%>
</code>
<!-- ===============================================================//-->
<!-- =======================   GENERATOR   =========================//-->
<!-- ======================= END COPY HERE =========================//-->
<!-- ===============================================================//-->
<hr><font color="#008000">Snippet for webVars to record fields</font><hr>
<%
else
   ? "ERROR: file [" + cTable + "] does not exist in " + cDbPath html
endif //-- not empty(cDb) and file(cTable)
%>
<code>
<%
? '<' + '%'
? "//-- WEBVARS TRANSLATION INTO FIELDS"
? "//"
for iii = 1 to nFields
    cLabel := fieldname(iii)
    mVal   := fieldcont(fieldname(iii))
    do case
      case type(mVal) = "C"
         ? padr(fieldname(iii),14) + ':= MSPFieldValue("EF_' + cLabel + '")'
      case type(mVal) = "N"
         ? padr(fieldname(iii),14) + ':= val(MSPFieldValue("EF_' + cLabel + '"))'
      case type(mVal) = "D"
         ? padr(fieldname(iii),14) + ':= ctod(MSPFieldValue("EF_' + cLabel + '"))'
      case type(mVal) = "L"
         ? padr(fieldname(iii),14) + ':= iif(MSPFieldValue("EF_' + cLabel + '")="S",.t.,.f.)'
      case type(mVal) = "M"
         ? padr(fieldname(iii),14) + ':= MSPFieldValue("EF_' + cLabel + '")'
    endcase 
next
? '%' + '>'
%>
<hr><font color="#008000">Code for loading the record</font><hr>
<%
?
? '<' + '%'
? "//-- INCOMING WEBVARS (from the webForm)"
? "//"
for iii = 1 to nFields
    cLabel := fieldname(iii)
    mVal   := fieldcont(fieldname(iii))
    do case
      case type(mVal) = "C"
         ? lower(type(mVal)) + padr(initcap(cLabel),14) + ':= MSPFieldValue("EF_' + cLabel + '")'
      case type(mVal) = "N"
         ? lower(type(mVal)) + padr(initcap(cLabel),14) + ':= val(MSPFieldValue("EF_' + cLabel + '"))'
      case type(mVal) = "D"
         ? lower(type(mVal)) + padr(initcap(cLabel),14) + ':= ctod(MSPFieldValue("EF_' + cLabel + '"))'
      case type(mVal) = "L"
         ? lower(type(mVal)) + padr(initcap(cLabel),14) + ':= iif(MSPFieldValue("EF_' + cLabel + '")="S",.t.,.f.)'
      case type(mVal) = "M"
         ? lower(type(mVal)) + padr(initcap(cLabel),14) + ':= MSPFieldValue("EF_' + cLabel + '")'
    endcase 
next
? '%' + '>'
?
? '<' + '%'
? "//-- DATABASE TO USE"
? "//"
? 'cDir := setDB("'+filebone(cDir)+'")'
? 'cDbPath := cDir   //-- to ensure some compatibility'
? 
? "use (cTable)"
? '%' + '>'
?
? '<' + '%'
? "//-- UPDATING THE RECORD"
? "//"
? "* append blank"
? "if rlock(2)"
for iii = 1 to nFields
  cLabel := fieldname(iii)
  mVal   := fieldcont(fieldname(iii))
  cVar   := "EF_" + cLabel
  ? "   repl " + padr(cLabel,13) + ' with ' + lower(type(mVal)) + initcap(cLabel)
next
? "   unlock"
? "endif"
? '%' + '>'
?
%>
</code>
<hr>
<!-- ===============================================================//-->
<!-- =====================     FORM SAVER     ======================//-->
<!-- ======================= END COPY HERE =========================//-->
<!-- ===============================================================//-->
</body>
</html>
<!----------------------------------- HTML BODY END -------------------------------------- //-->